import pandas as pd
from emailer import email_sender
from utils import formatting as fmt
from utils import grouping as grp
from utils import filtering as fil
from tapes import grabber

df = grabber.query_tape()
df['days_delinquent_bin'] = pd.cut(df['days_delinquent']
    , bins=[-1000, 0, 15, 30, 60, 90, 120, 150, 180, 365, 10000]
    )
df1 = df[df['days_delinquent'] > 30] 
df2 = df[(df['days_delinquent'] > 30) & (df['days_delinquent'] <= 60)]


def get_total_dq_by_product(df, product, denom):

    dq = pd.DataFrame(grp.group_sort_divide(
    fil.filter_df(df, ['product_category'], [product])
    ,'days_delinquent_bin'
    ,denom
    )).sort_index(ascending=True)
    dq="""
    <table><tr><td>{}</td></tr></table>
    """.format(dq.to_html())
    dq = dq.replace("\n", "")
    
    return dq


def get_dq_strats(df, product, metric, denom, top_n, sort_by='index'):

    if sort_by=='index':
        dq = pd.DataFrame(grp.group_sort_divide(
        fil.filter_df(df, ['product_category'], [product])
        ,metric
        ,denom
        ,top_n=top_n
        )).sort_index(ascending=True)
        dq="""
        <table><tr><td>{}</td></tr></table>
        """.format(dq.to_html())
        dq = dq.replace("\n", "")
    else:
        dq = pd.DataFrame(grp.group_sort_divide(
        fil.filter_df(df, ['product_category'], [product])
        ,metric
        ,denom
        ,top_n=top_n
        ))
        dq="""
        <table><tr><td>{}</td></tr></table>
        """.format(dq.to_html())
        dq = dq.replace("\n", "")

    return dq


email_body = """

This is an autogenerated delinquency monitor report. 

As of now, Drip Capital has the following delinquent exposure as a percent of each product's total UPB:

RF:
{} 

IF:
{}

DF:
{}

Of the assets that are 30+ DPD, the top five countries are:

RF:
{}

IF:
{}

DF:
{}

Of the assets that are 30+ DPD, the top five exporters are:

RF:
{}

IF:
{}

DF:
{}

Of the assets that are 30+ DPD, the top five importers are:

RF:
{}

IF:
{}

DF:
{}

Of the assets that are (30-60] DPD, the top five exporters are:

RF:
{}

IF:
{}

DF:
{}

Of the assets that are (30-60] DPD, the top five importers are:

RF:
{}

IF:
{}

DF:
{}

Of the assets that are 30+ DPD, the insurance grade distribution is:

RF:
{}

IF:
{}

DF:
{}



Please contact brian@dripcapital.com with any questions. 
""".format(
    get_total_dq_by_product(df, 'RF', 'outstanding_advance_balance_usd')
    ,get_total_dq_by_product(df, 'IF', 'outstanding_advance_balance_usd')
    ,get_total_dq_by_product(df, 'DF', 'outstanding_advance_balance_usd')

    ,get_dq_strats(df1, 'RF', 'buyer_country', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df1, 'IF', 'buyer_country', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df1, 'DF', 'buyer_country', 'outstanding_advance_balance_usd', 5, 'percent_of_total')    

    ,get_dq_strats(df1, 'RF', 'exporter_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df1, 'IF', 'exporter_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df1, 'DF', 'exporter_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    
    ,get_dq_strats(df1, 'RF', 'importer_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df1, 'IF', 'importer_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df1, 'DF', 'importer_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')

    ,get_dq_strats(df2, 'RF', 'exporter_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df2, 'IF', 'exporter_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df2, 'DF', 'exporter_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')

    ,get_dq_strats(df2, 'RF', 'importer_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df2, 'IF', 'importer_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')
    ,get_dq_strats(df2, 'DF', 'importer_company_name', 'outstanding_advance_balance_usd', 5, 'percent_of_total')

    ,get_dq_strats(df1, 'RF', 'buyer_insurance_grade', 'outstanding_advance_balance_usd', None, 'index')
    ,get_dq_strats(df1, 'IF', 'buyer_insurance_grade', 'outstanding_advance_balance_usd', None, 'index')
    ,get_dq_strats(df1, 'DF', 'buyer_insurance_grade', 'outstanding_advance_balance_usd', None, 'index')
)

email_subj = 'Delinquency Monitor - {}'.format(fmt.datetime_to_str())

email_sender.send_email(
    to='brian@dripcapital.com' #['capitalmarkets@dripcapital.com'] #, 'analytics@dripcapital.com', 'u6c6i1t9b5k9w8g9@dripinc.slack.com']
    # , cc=['brian@dripcapital.com', 'akshay.dua@dripcapital.com'] #, 'edmundo@dripcapital.com']
    , subject=email_subj
    , body=email_body)
